# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Brew path
export PATH="/opt/homebrew/bin:$PATH"
export PATH=$PATH:~/Library/Android/sdk/platform-tools

export ANDROID_HOME=/Users/abhirooprasad/Library/Android/sdk


# Define variables for reuse
export AZURE_VM_USER="azureuser"
export ssh_voiceClone_IP="172.210.85.238"
export ssh_voiceClone_PEM_PATH="/Users/abhiroopprasad/VoiceCloningkey.pem"
# Function to upload files to Azure VM
upload_to_voiceClone() {
  local_file_path=$(realpath "$1")
  remote_file_path="$2"
  scp -i "$ssh_voiceClone_PEM_PATH" "$local_file_path" "$AZURE_VM_USER@$ssh_voiceClone_IP:$remote_file_path"
}

# Function to download files from Azure VM
download_from_voiceClone() {
  remote_file_path="$1"
  local_file_path=$(realpath "$2")
  scp -i "$ssh_voiceClone_PEM_PATH" "$AZURE_VM_USER@$ssh_voiceClone_IP:$remote_file_path" "$local_file_path"
}

alias sz="source ~/.zshrc"
alias gs="git status"
alias gd="git diff"
alias gl="git log"
alias gc="git commit"
alias azs="atom ~/.zshrc"
alias python="python3.10"
alias pip="pip3"
# alias ipython="python3.10 -m IPython"
alias newenv="python3.10 -m venv venv"
alias activate="source ./venv/bin/activate"
alias androidHacking='export PATH="$HOME/platform-tools:$PATH"; echo -ne "\033]0;Android Hacking Terminal\007"'
alias code_hd='cd /Volumes/Abhiroop_hd1/code_hd'
alias ssh_voiceClone='ssh -i /Users/abhiroopprasad/VoiceCloningkey.pem azureuser@172.210.85.238'
alias deallocate_voiceClone='az vm deallocate --resource-group PRASADTEST_GROUP --name VoiceCloning'
alias start_voiceClone='az vm start --resource-group PRASADTEST_GROUP --name VoiceCloning'


RPROMPT="[%D{%L:%M:%S}]"
PROMPT="%(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}➜ )"
PROMPT+='%{$bg[black]%}%{$fg[white]%}${$(hostname)%.*}/%{$reset_color%}%{$fg[cyan]%}%c%{$reset_color%} $(git_prompt_info)'

export JAVA_HOME="/Library/Java/JavaVirtualMachines/amazon-corretto-8.jdk/Contents/Home"

autoload bashcompinit && bashcompinit
autoload -Uz compinit && compinit
complete -C '~/homebrew/bin/aws_completer' aws

# place this after nvm initialization!
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
eval "$(/opt/homebrew/bin/brew shellenv)"

autoload bashcompinit && bashcompinit
source $(brew --prefix)/etc/bash_completion.d/az

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/abhiroopprasad/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/abhiroopprasad/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/abhiroopprasad/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/abhiroopprasad/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<


# Created by `pipx` on 2024-06-12 17:00:24
export PATH="$PATH:/Users/abhiroopprasad/.local/bin"
